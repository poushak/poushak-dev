# server {
#     listen 80;
#     listen [::]:80;
#     server_name api.poushak.com;
#     return 301 https://$server_name$request_uri;
# }

server {
    listen       80;
    listen       [::]:80;
    server_tokens off;
    #listen       443 ssl;
    #listen       [::]:443 ssl;
    #server_name  api.poushak.com;
    #root         /usr/share/nginx/html/customer;

    #ssl_certificate /etc/nginx/keys/certificate.crt;
    #ssl_certificate_key /etc/nginx/keys/private-key.crt;
    #ssl_session_cache shared:SSL:1m;
    #ssl_session_timeout  10m;
    #ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    #ssl_prefer_server_ciphers on;

    #include /etc/nginx/cors.conf;

    error_page 401 /unauthorized;
    location = /unauthorized {
        default_type application/json;
        return 401 '{"error": "invalid token"}';
    }

    # Define custom proxy servers here
    location /api/auth/ {
        proxy_pass http://auth:9000/;
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    }

    location /api/seller/ {
        auth_request     /verify;
        auth_request_set $user $upstream_http_name;
        auth_request_set $id $upstream_http_id;
        proxy_set_header x-user $user;
        proxy_set_header x-id $id;

        proxy_pass http://seller:3001/;
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    }

    location /api/buyer/ {
        auth_request     /verify;
        auth_request_set $user $upstream_http_name;
        auth_request_set $id $upstream_http_id;
        proxy_set_header x-user $user;
        proxy_set_header x-id $id;

        proxy_pass http://buyer:3001/;
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header X-real-ip $remote_addr;
        proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    }

    # interal location to verify JWT
    location = /verify {
        internal;
        proxy_pass              http://auth:9000/users/auth/verify;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }
}